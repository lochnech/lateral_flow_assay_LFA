# Device configuration
device: "cuda"  # Will be automatically set to "cpu" if CUDA is not available

# Image dimensions
image_height: 512
image_width: 512

# Model paths
model_checkpoint_path: "./data/models/model_checkpoint.pth.tar"

# Data paths
data_path: "./data"
raw_images_path: "./data/ancient/raw_images/"
masks_path: "./data/ancient/mask_images/"
padded_images_path: "./data/ancient/padded_images/"
applied_masks_path: "./data/ancient/applied_masks_images/"

# Logging configuration
logs_path: "./logs"
transformed_images_path: "./logs/transformed_images"

# Model architecture
model:
  in_channels: 3
  out_channels: 1

# Preprocessing parameters
preprocessing:
  # Image transformation parameters
  transform:
    max_size: 512
    padding:
      min_height: 512
      min_width: 512
      border_mode: "constant"
      value: [0, 0, 0]  # Black padding
    normalize:
      mean: [0.0, 0.0, 0.0]
      std: [1.0, 1.0, 1.0]
      max_pixel_value: 255.0
  # Image file extensions to process
  file_extensions: [".jpg", ".jpeg", ".png"]

# Mask generation
mask:
  threshold: 0.5
  binary_value: 255
  
  # Mask processing parameters
  processing:
    # Apply Gaussian blur to smooth the mask edges
    gaussian_blur:
      apply: true
      kernel_size: 7  # Must be odd number (3, 5, 7, etc.)
      sigma: 0        # 0 means auto-calculate based on kernel size
      
    # Apply dilation to expand the mask
    dilation:
      apply: true
      kernel_size: 5  # Size of the structuring element
      iterations: 2   # Number of times to apply dilation
      
    # Apply morphological operations (opening/closing)
    morphology:
      apply: true
      operation: "close"  # Options: "open", "close"
      kernel_size: 5
      iterations: 1

# Mask application
mask_application:
  background_color: [255, 255, 255]  # White background for areas outside mask 